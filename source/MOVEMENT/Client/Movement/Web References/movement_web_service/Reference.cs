//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace Movement.UserInterface.movement_web_service {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System .Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback makeUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPatientNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback logInOperationCompleted;
        
        private System.Threading.SendOrPostCallback logOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback findPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrievePatientDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getScriptOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getScriptListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback storeTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback makeBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTestDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Movement.UserInterface.Properties.Settings.Default.Movement_movement_web_service_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event makeUserCompletedEventHandler makeUserCompleted;
        
        /// <remarks/>
        public event addPatientNoteCompletedEventHandler addPatientNoteCompleted;
        
        /// <remarks/>
        public event getPatientNotesCompletedEventHandler getPatientNotesCompleted;
        
        /// <remarks/>
        public event logInCompletedEventHandler logInCompleted;
        
        /// <remarks/>
        public event logOutCompletedEventHandler logOutCompleted;
        
        /// <remarks/>
        public event findPatientCompletedEventHandler findPatientCompleted;
        
        /// <remarks/>
        public event addPatientCompletedEventHandler addPatientCompleted;
        
        /// <remarks/>
        public event deletePatientCompletedEventHandler deletePatientCompleted;
        
        /// <remarks/>
        public event updatePatientCompletedEventHandler updatePatientCompleted;
        
        /// <remarks/>
        public event retrievePatientDataCompletedEventHandler retrievePatientDataCompleted;
        
        /// <remarks/>
        public event getScriptCompletedEventHandler getScriptCompleted;
        
        /// <remarks/>
        public event getBatchCompletedEventHandler getBatchCompleted;
        
        /// <remarks/>
        public event getScriptListCompletedEventHandler getScriptListCompleted;
        
        /// <remarks/>
        public event getBatchListCompletedEventHandler getBatchListCompleted;
        
        /// <remarks/>
        public event storeTestCompletedEventHandler storeTestCompleted;
        
        /// <remarks/>
        public event makeBatchCompletedEventHandler makeBatchCompleted;
        
        /// <remarks/>
        public event getTestsCompletedEventHandler getTestsCompleted;
        
        /// <remarks/>
        public event getTestDataCompletedEventHandler getTestDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/makeUser", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool makeUser(UserObject user) {
            object[] results = this.Invoke("makeUser", new object[] {
                        user});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void makeUserAsync(UserObject user) {
            this.makeUserAsync(user, null);
        }
        
        /// <remarks/>
        public void makeUserAsync(UserObject user, object userState) {
            if ((this.makeUserOperationCompleted == null)) {
                this.makeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmakeUserOperationCompleted);
            }
            this.InvokeAsync("makeUser", new object[] {
                        user}, this.makeUserOperationCompleted, userState);
        }
        
        private void OnmakeUserOperationCompleted(object arg) {
            if ((this.makeUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.makeUserCompleted(this, new makeUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/addPatientNote", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool addPatientNote(PatientObject patient, UserObject user, string data) {
            object[] results = this.Invoke("addPatientNote", new object[] {
                        patient,
                        user,
                        data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addPatientNoteAsync(PatientObject patient, UserObject user, string data) {
            this.addPatientNoteAsync(patient, user, data, null);
        }
        
        /// <remarks/>
        public void addPatientNoteAsync(PatientObject patient, UserObject user, string data, object userState) {
            if ((this.addPatientNoteOperationCompleted == null)) {
                this.addPatientNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPatientNoteOperationCompleted);
            }
            this.InvokeAsync("addPatientNote", new object[] {
                        patient,
                        user,
                        data}, this.addPatientNoteOperationCompleted, userState);
        }
        
        private void OnaddPatientNoteOperationCompleted(object arg) {
            if ((this.addPatientNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPatientNoteCompleted(this, new addPatientNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/getPatientNotes" +
            "", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Notes[] getPatientNotes(PatientObject patient) {
            object[] results = this.Invoke("getPatientNotes", new object[] {
                        patient});
            return ((Notes[])(results[0]));
        }
        
        /// <remarks/>
        public void getPatientNotesAsync(PatientObject patient) {
            this.getPatientNotesAsync(patient, null);
        }
        
        /// <remarks/>
        public void getPatientNotesAsync(PatientObject patient, object userState) {
            if ((this.getPatientNotesOperationCompleted == null)) {
                this.getPatientNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientNotesOperationCompleted);
            }
            this.InvokeAsync("getPatientNotes", new object[] {
                        patient}, this.getPatientNotesOperationCompleted, userState);
        }
        
        private void OngetPatientNotesOperationCompleted(object arg) {
            if ((this.getPatientNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientNotesCompleted(this, new getPatientNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/logIn", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserObject logIn(string userName, string password) {
            object[] results = this.Invoke("logIn", new object[] {
                        userName,
                        password});
            return ((UserObject)(results[0]));
        }
        
        /// <remarks/>
        public void logInAsync(string userName, string password) {
            this.logInAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void logInAsync(string userName, string password, object userState) {
            if ((this.logInOperationCompleted == null)) {
                this.logInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogInOperationCompleted);
            }
            this.InvokeAsync("logIn", new object[] {
                        userName,
                        password}, this.logInOperationCompleted, userState);
        }
        
        private void OnlogInOperationCompleted(object arg) {
            if ((this.logInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logInCompleted(this, new logInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/logOut", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool logOut() {
            object[] results = this.Invoke("logOut", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void logOutAsync() {
            this.logOutAsync(null);
        }
        
        /// <remarks/>
        public void logOutAsync(object userState) {
            if ((this.logOutOperationCompleted == null)) {
                this.logOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogOutOperationCompleted);
            }
            this.InvokeAsync("logOut", new object[0], this.logOutOperationCompleted, userState);
        }
        
        private void OnlogOutOperationCompleted(object arg) {
            if ((this.logOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logOutCompleted(this, new logOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/findPatient", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PatientObject[] findPatient(PatientObject patient) {
            object[] results = this.Invoke("findPatient", new object[] {
                        patient});
            return ((PatientObject[])(results[0]));
        }
        
        /// <remarks/>
        public void findPatientAsync(PatientObject patient) {
            this.findPatientAsync(patient, null);
        }
        
        /// <remarks/>
        public void findPatientAsync(PatientObject patient, object userState) {
            if ((this.findPatientOperationCompleted == null)) {
                this.findPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPatientOperationCompleted);
            }
            this.InvokeAsync("findPatient", new object[] {
                        patient}, this.findPatientOperationCompleted, userState);
        }
        
        private void OnfindPatientOperationCompleted(object arg) {
            if ((this.findPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findPatientCompleted(this, new findPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/addPatient", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addPatient(PatientObject patient) {
            object[] results = this.Invoke("addPatient", new object[] {
                        patient});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addPatientAsync(PatientObject patient) {
            this.addPatientAsync(patient, null);
        }
        
        /// <remarks/>
        public void addPatientAsync(PatientObject patient, object userState) {
            if ((this.addPatientOperationCompleted == null)) {
                this.addPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPatientOperationCompleted);
            }
            this.InvokeAsync("addPatient", new object[] {
                        patient}, this.addPatientOperationCompleted, userState);
        }
        
        private void OnaddPatientOperationCompleted(object arg) {
            if ((this.addPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPatientCompleted(this, new addPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/deletePatient", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deletePatient(PatientObject patient) {
            object[] results = this.Invoke("deletePatient", new object[] {
                        patient});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deletePatientAsync(PatientObject patient) {
            this.deletePatientAsync(patient, null);
        }
        
        /// <remarks/>
        public void deletePatientAsync(PatientObject patient, object userState) {
            if ((this.deletePatientOperationCompleted == null)) {
                this.deletePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePatientOperationCompleted);
            }
            this.InvokeAsync("deletePatient", new object[] {
                        patient}, this.deletePatientOperationCompleted, userState);
        }
        
        private void OndeletePatientOperationCompleted(object arg) {
            if ((this.deletePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePatientCompleted(this, new deletePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/updatePatient", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updatePatient(PatientObject patient) {
            object[] results = this.Invoke("updatePatient", new object[] {
                        patient});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatePatientAsync(PatientObject patient) {
            this.updatePatientAsync(patient, null);
        }
        
        /// <remarks/>
        public void updatePatientAsync(PatientObject patient, object userState) {
            if ((this.updatePatientOperationCompleted == null)) {
                this.updatePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePatientOperationCompleted);
            }
            this.InvokeAsync("updatePatient", new object[] {
                        patient}, this.updatePatientOperationCompleted, userState);
        }
        
        private void OnupdatePatientOperationCompleted(object arg) {
            if ((this.updatePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePatientCompleted(this, new updatePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/retrievePatient" +
            "Data", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientObject retrievePatientData(PatientObject patient) {
            object[] results = this.Invoke("retrievePatientData", new object[] {
                        patient});
            return ((PatientObject)(results[0]));
        }
        
        /// <remarks/>
        public void retrievePatientDataAsync(PatientObject patient) {
            this.retrievePatientDataAsync(patient, null);
        }
        
        /// <remarks/>
        public void retrievePatientDataAsync(PatientObject patient, object userState) {
            if ((this.retrievePatientDataOperationCompleted == null)) {
                this.retrievePatientDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrievePatientDataOperationCompleted);
            }
            this.InvokeAsync("retrievePatientData", new object[] {
                        patient}, this.retrievePatientDataOperationCompleted, userState);
        }
        
        private void OnretrievePatientDataOperationCompleted(object arg) {
            if ((this.retrievePatientDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrievePatientDataCompleted(this, new retrievePatientDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/getScript", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Script getScript(ScriptInfo script) {
            object[] results = this.Invoke("getScript", new object[] {
                        script});
            return ((Script)(results[0]));
        }
        
        /// <remarks/>
        public void getScriptAsync(ScriptInfo script) {
            this.getScriptAsync(script, null);
        }
        
        /// <remarks/>
        public void getScriptAsync(ScriptInfo script, object userState) {
            if ((this.getScriptOperationCompleted == null)) {
                this.getScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetScriptOperationCompleted);
            }
            this.InvokeAsync("getScript", new object[] {
                        script}, this.getScriptOperationCompleted, userState);
        }
        
        private void OngetScriptOperationCompleted(object arg) {
            if ((this.getScriptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getScriptCompleted(this, new getScriptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/getBatch", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Batch getBatch(Batch batch) {
            object[] results = this.Invoke("getBatch", new object[] {
                        batch});
            return ((Batch)(results[0]));
        }
        
        /// <remarks/>
        public void getBatchAsync(Batch batch) {
            this.getBatchAsync(batch, null);
        }
        
        /// <remarks/>
        public void getBatchAsync(Batch batch, object userState) {
            if ((this.getBatchOperationCompleted == null)) {
                this.getBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchOperationCompleted);
            }
            this.InvokeAsync("getBatch", new object[] {
                        batch}, this.getBatchOperationCompleted, userState);
        }
        
        private void OngetBatchOperationCompleted(object arg) {
            if ((this.getBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchCompleted(this, new getBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/getScriptList", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ScriptInfo[] getScriptList() {
            object[] results = this.Invoke("getScriptList", new object[0]);
            return ((ScriptInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getScriptListAsync() {
            this.getScriptListAsync(null);
        }
        
        /// <remarks/>
        public void getScriptListAsync(object userState) {
            if ((this.getScriptListOperationCompleted == null)) {
                this.getScriptListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetScriptListOperationCompleted);
            }
            this.InvokeAsync("getScriptList", new object[0], this.getScriptListOperationCompleted, userState);
        }
        
        private void OngetScriptListOperationCompleted(object arg) {
            if ((this.getScriptListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getScriptListCompleted(this, new getScriptListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/getBatchList", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Batch[] getBatchList() {
            object[] results = this.Invoke("getBatchList", new object[0]);
            return ((Batch[])(results[0]));
        }
        
        /// <remarks/>
        public void getBatchListAsync() {
            this.getBatchListAsync(null);
        }
        
        /// <remarks/>
        public void getBatchListAsync(object userState) {
            if ((this.getBatchListOperationCompleted == null)) {
                this.getBatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchListOperationCompleted);
            }
            this.InvokeAsync("getBatchList", new object[0], this.getBatchListOperationCompleted, userState);
        }
        
        private void OngetBatchListOperationCompleted(object arg) {
            if ((this.getBatchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchListCompleted(this, new getBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/storeTest", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool storeTest(Test test) {
            object[] results = this.Invoke("storeTest", new object[] {
                        test});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void storeTestAsync(Test test) {
            this.storeTestAsync(test, null);
        }
        
        /// <remarks/>
        public void storeTestAsync(Test test, object userState) {
            if ((this.storeTestOperationCompleted == null)) {
                this.storeTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstoreTestOperationCompleted);
            }
            this.InvokeAsync("storeTest", new object[] {
                        test}, this.storeTestOperationCompleted, userState);
        }
        
        private void OnstoreTestOperationCompleted(object arg) {
            if ((this.storeTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.storeTestCompleted(this, new storeTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/makeBatch", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool makeBatch(Batch batch) {
            object[] results = this.Invoke("makeBatch", new object[] {
                        batch});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void makeBatchAsync(Batch batch) {
            this.makeBatchAsync(batch, null);
        }
        
        /// <remarks/>
        public void makeBatchAsync(Batch batch, object userState) {
            if ((this.makeBatchOperationCompleted == null)) {
                this.makeBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmakeBatchOperationCompleted);
            }
            this.InvokeAsync("makeBatch", new object[] {
                        batch}, this.makeBatchOperationCompleted, userState);
        }
        
        private void OnmakeBatchOperationCompleted(object arg) {
            if ((this.makeBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.makeBatchCompleted(this, new makeBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/getTests", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Test[] getTests(int numTests, PatientObject patient) {
            object[] results = this.Invoke("getTests", new object[] {
                        numTests,
                        patient});
            return ((Test[])(results[0]));
        }
        
        /// <remarks/>
        public void getTestsAsync(int numTests, PatientObject patient) {
            this.getTestsAsync(numTests, patient, null);
        }
        
        /// <remarks/>
        public void getTestsAsync(int numTests, PatientObject patient, object userState) {
            if ((this.getTestsOperationCompleted == null)) {
                this.getTestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTestsOperationCompleted);
            }
            this.InvokeAsync("getTests", new object[] {
                        numTests,
                        patient}, this.getTestsOperationCompleted, userState);
        }
        
        private void OngetTestsOperationCompleted(object arg) {
            if ((this.getTestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTestsCompleted(this, new getTestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx/getTestData", RequestNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", ResponseNamespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Data[] getTestData(int testID) {
            object[] results = this.Invoke("getTestData", new object[] {
                        testID});
            return ((Data[])(results[0]));
        }
        
        /// <remarks/>
        public void getTestDataAsync(int testID) {
            this.getTestDataAsync(testID, null);
        }
        
        /// <remarks/>
        public void getTestDataAsync(int testID, object userState) {
            if ((this.getTestDataOperationCompleted == null)) {
                this.getTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTestDataOperationCompleted);
            }
            this.InvokeAsync("getTestData", new object[] {
                        testID}, this.getTestDataOperationCompleted, userState);
        }
        
        private void OngetTestDataOperationCompleted(object arg) {
            if ((this.getTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTestDataCompleted(this, new getTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public partial class UserObject {
        
        private string nameField;
        
        private string contactInfoField;
        
        private string userNameField;
        
        private string passwordField;
        
        private char roleField;
        
        private int userIDField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public char role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public partial class AnalysisData {
        
        private AnalysisMetric metricField;
        
        private double meanField;
        
        private double stdDevField;
        
        private double minField;
        
        private double maxField;
        
        /// <remarks/>
        public AnalysisMetric metric {
            get {
                return this.metricField;
            }
            set {
                this.metricField = value;
            }
        }
        
        /// <remarks/>
        public double mean {
            get {
                return this.meanField;
            }
            set {
                this.meanField = value;
            }
        }
        
        /// <remarks/>
        public double stdDev {
            get {
                return this.stdDevField;
            }
            set {
                this.stdDevField = value;
            }
        }
        
        /// <remarks/>
        public double min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
            }
        }
        
        /// <remarks/>
        public double max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public enum AnalysisMetric {
        
        /// <remarks/>
        Invalid,
        
        /// <remarks/>
        X,
        
        /// <remarks/>
        Y,
        
        /// <remarks/>
        Pressure,
        
        /// <remarks/>
        VelocityX,
        
        /// <remarks/>
        VelocityY,
        
        /// <remarks/>
        MassFlux,
        
        /// <remarks/>
        AccelerationX,
        
        /// <remarks/>
        AccelerationY,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        VelocityTheta,
        
        /// <remarks/>
        VelocityRho,
        
        /// <remarks/>
        AccelerationTheta,
        
        /// <remarks/>
        AccelerationRho,
        
        /// <remarks/>
        VelocityTangent,
        
        /// <remarks/>
        AccelerationTangent,
        
        /// <remarks/>
        Deviation,
        
        /// <remarks/>
        InnerDeviation,
        
        /// <remarks/>
        OuterDeviation,
        
        /// <remarks/>
        Distance,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        TimeDelta,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public partial class Data {
        
        private short xField;
        
        private short yField;
        
        private int timeField;
        
        private short pressureField;
        
        /// <remarks/>
        public short x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public short y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public int time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public short pressure {
            get {
                return this.pressureField;
            }
            set {
                this.pressureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public partial class Test {
        
        private UserObject userField;
        
        private PatientObject patientField;
        
        private Script scriptField;
        
        private Data[] dataField;
        
        private char handField;
        
        private char modeField;
        
        private double avg_XField;
        
        private double avg_YField;
        
        private short rotationField;
        
        private bool isNormalField;
        
        private AnalysisData[] analField;
        
        private System.DateTime timestampField;
        
        private int idField;
        
        /// <remarks/>
        public UserObject user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public PatientObject patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
        
        /// <remarks/>
        public Script script {
            get {
                return this.scriptField;
            }
            set {
                this.scriptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Data[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public char hand {
            get {
                return this.handField;
            }
            set {
                this.handField = value;
            }
        }
        
        /// <remarks/>
        public char mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        public double avg_X {
            get {
                return this.avg_XField;
            }
            set {
                this.avg_XField = value;
            }
        }
        
        /// <remarks/>
        public double avg_Y {
            get {
                return this.avg_YField;
            }
            set {
                this.avg_YField = value;
            }
        }
        
        /// <remarks/>
        public short rotation {
            get {
                return this.rotationField;
            }
            set {
                this.rotationField = value;
            }
        }
        
        /// <remarks/>
        public bool isNormal {
            get {
                return this.isNormalField;
            }
            set {
                this.isNormalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AnalysisData[] anal {
            get {
                return this.analField;
            }
            set {
                this.analField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public partial class PatientObject {
        
        private string nameField;
        
        private string addressField;
        
        private string contactInfoField;
        
        private char sexField;
        
        private System.DateTime dobField;
        
        private char handednessField;
        
        private string ssnField;
        
        private int idField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string ContactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
        
        /// <remarks/>
        public char sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dob {
            get {
                return this.dobField;
            }
            set {
                this.dobField = value;
            }
        }
        
        /// <remarks/>
        public char handedness {
            get {
                return this.handednessField;
            }
            set {
                this.handednessField = value;
            }
        }
        
        /// <remarks/>
        public string ssn {
            get {
                return this.ssnField;
            }
            set {
                this.ssnField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public partial class Script {
        
        private string scriptDataField;
        
        private int scriptIDField;
        
        private string typeField;
        
        private int versionField;
        
        /// <remarks/>
        public string scriptData {
            get {
                return this.scriptDataField;
            }
            set {
                this.scriptDataField = value;
            }
        }
        
        /// <remarks/>
        public int scriptID {
            get {
                return this.scriptIDField;
            }
            set {
                this.scriptIDField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public partial class Batch {
        
        private string nameField;
        
        private string descriptionField;
        
        private ScriptInfo[] scriptsField;
        
        private int batchIDField;
        
        private int countField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ScriptInfo[] scripts {
            get {
                return this.scriptsField;
            }
            set {
                this.scriptsField = value;
            }
        }
        
        /// <remarks/>
        public int batchID {
            get {
                return this.batchIDField;
            }
            set {
                this.batchIDField = value;
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public partial class ScriptInfo {
        
        private string nameField;
        
        private int scriptIDField;
        
        private int versionIDField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int scriptID {
            get {
                return this.scriptIDField;
            }
            set {
                this.scriptIDField = value;
            }
        }
        
        /// <remarks/>
        public int versionID {
            get {
                return this.versionIDField;
            }
            set {
                this.versionIDField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://softeng-lab.camp.clarkson.edu/movement/server/Service.asmx")]
    public partial class Notes {
        
        private string authorField;
        
        private string noteField;
        
        private System.DateTime timeField;
        
        /// <remarks/>
        public string author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void makeUserCompletedEventHandler(object sender, makeUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class makeUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal makeUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void addPatientNoteCompletedEventHandler(object sender, addPatientNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPatientNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPatientNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void getPatientNotesCompletedEventHandler(object sender, getPatientNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Notes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Notes[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void logInCompletedEventHandler(object sender, logInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void logOutCompletedEventHandler(object sender, logOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void findPatientCompletedEventHandler(object sender, findPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void addPatientCompletedEventHandler(object sender, addPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void deletePatientCompletedEventHandler(object sender, deletePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void updatePatientCompletedEventHandler(object sender, updatePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void retrievePatientDataCompletedEventHandler(object sender, retrievePatientDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrievePatientDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrievePatientDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void getScriptCompletedEventHandler(object sender, getScriptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getScriptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getScriptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Script Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Script)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void getBatchCompletedEventHandler(object sender, getBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Batch Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Batch)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void getScriptListCompletedEventHandler(object sender, getScriptListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getScriptListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getScriptListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScriptInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScriptInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void getBatchListCompletedEventHandler(object sender, getBatchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Batch[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Batch[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void storeTestCompletedEventHandler(object sender, storeTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class storeTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal storeTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void makeBatchCompletedEventHandler(object sender, makeBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class makeBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal makeBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void getTestsCompletedEventHandler(object sender, getTestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Test[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Test[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void getTestDataCompletedEventHandler(object sender, getTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Data[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Data[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591