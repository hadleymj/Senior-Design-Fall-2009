//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3603.
// 
#pragma warning disable 1591

namespace Laptop_GUI.Activity_Monitor {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PDAConnectionSoap", Namespace="http://tempuri.org/")]
    public partial class PDAConnection : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendACKOperationCompleted;
        
        private System.Threading.SendOrPostCallback disconnectOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PDAConnection() {
            this.Url = global::Laptop_GUI.Properties.Settings.Default.Laptop_GUI_localhost1_PDAConnection;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getRequestCompletedEventHandler getRequestCompleted;
        
        /// <remarks/>
        public event uploadStatsCompletedEventHandler uploadStatsCompleted;
        
        /// <remarks/>
        public event sendTaskCompletedEventHandler sendTaskCompleted;
        
        /// <remarks/>
        public event sendACKCompletedEventHandler sendACKCompleted;
        
        /// <remarks/>
        public event disconnectCompletedEventHandler disconnectCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getRequest() {
            object[] results = this.Invoke("getRequest", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getRequestAsync() {
            this.getRequestAsync(null);
        }
        
        /// <remarks/>
        public void getRequestAsync(object userState) {
            if ((this.getRequestOperationCompleted == null)) {
                this.getRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRequestOperationCompleted);
            }
            this.InvokeAsync("getRequest", new object[0], this.getRequestOperationCompleted, userState);
        }
        
        private void OngetRequestOperationCompleted(object arg) {
            if ((this.getRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRequestCompleted(this, new getRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/uploadStats", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadStats() {
            this.Invoke("uploadStats", new object[0]);
        }
        
        /// <remarks/>
        public void uploadStatsAsync() {
            this.uploadStatsAsync(null);
        }
        
        /// <remarks/>
        public void uploadStatsAsync(object userState) {
            if ((this.uploadStatsOperationCompleted == null)) {
                this.uploadStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadStatsOperationCompleted);
            }
            this.InvokeAsync("uploadStats", new object[0], this.uploadStatsOperationCompleted, userState);
        }
        
        private void OnuploadStatsOperationCompleted(object arg) {
            if ((this.uploadStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadStatsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendTask() {
            this.Invoke("sendTask", new object[0]);
        }
        
        /// <remarks/>
        public void sendTaskAsync() {
            this.sendTaskAsync(null);
        }
        
        /// <remarks/>
        public void sendTaskAsync(object userState) {
            if ((this.sendTaskOperationCompleted == null)) {
                this.sendTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTaskOperationCompleted);
            }
            this.InvokeAsync("sendTask", new object[0], this.sendTaskOperationCompleted, userState);
        }
        
        private void OnsendTaskOperationCompleted(object arg) {
            if ((this.sendTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendACK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendACK(string good) {
            this.Invoke("sendACK", new object[] {
                        good});
        }
        
        /// <remarks/>
        public void sendACKAsync(string good) {
            this.sendACKAsync(good, null);
        }
        
        /// <remarks/>
        public void sendACKAsync(string good, object userState) {
            if ((this.sendACKOperationCompleted == null)) {
                this.sendACKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendACKOperationCompleted);
            }
            this.InvokeAsync("sendACK", new object[] {
                        good}, this.sendACKOperationCompleted, userState);
        }
        
        private void OnsendACKOperationCompleted(object arg) {
            if ((this.sendACKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendACKCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/disconnect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void disconnect() {
            this.Invoke("disconnect", new object[0]);
        }
        
        /// <remarks/>
        public void disconnectAsync() {
            this.disconnectAsync(null);
        }
        
        /// <remarks/>
        public void disconnectAsync(object userState) {
            if ((this.disconnectOperationCompleted == null)) {
                this.disconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisconnectOperationCompleted);
            }
            this.InvokeAsync("disconnect", new object[0], this.disconnectOperationCompleted, userState);
        }
        
        private void OndisconnectOperationCompleted(object arg) {
            if ((this.disconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getRequestCompletedEventHandler(object sender, getRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void uploadStatsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void sendTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void sendACKCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void disconnectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591